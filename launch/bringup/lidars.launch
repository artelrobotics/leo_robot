<?xml version="1.0"?>
<launch>
    <arg name="robot_name"              default="$(env ROBOT_NAME)" />
    <arg name="base_frame"              default="base_footprint" />
    <arg name="output"                  default="screen" />
    <arg name="pub_joints"              default="false" />
    <arg name="front_lidar_frame"       default="leo_bot/front_lidar" />
    <arg name="back_lidar_frame"        default="leo_bot/back_lidar" />

    <group if="$(arg pub_joints)">
        <!-- Robot Description -->
        <param name="use_gui" value="false" />
        <param name="robot_description" command="$(find xacro)/xacro '$(find leo_urdf)/urdf/leo.urdf.xacro'  robot_model:=$(arg robot_name)
        base_frame:=$(arg base_frame)"/>

        <!-- Joint State -->
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" respawn="true" output="$(arg output)"/>
        <!-- Robot State  -->
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="$(arg output)"/>
    </group> 

    <!-- Front Lidar -->
    <node name="rplidar" pkg="rplidar_ros"  type="rplidarNode" output="$(arg output)" ns="front_lidar" required='true'>
        <param name="serial_port"         type="string" value="/dev/ttyRPLidarFront"/>  
        <param name="serial_baudrate"     type="int"    value="256000"/>
        <param name="frame_id"            type="string" value="$(arg front_lidar_frame)"/>
        <param name="inverted"            type="bool"   value="false"/>
        <param name="angle_compensate"    type="bool"   value="true"/>
        <param name="scan_mode"           type="string" value="Stability"/>
    </node>

    <!-- Back Lidar -->
    <node name="rplidar" pkg="rplidar_ros"  type="rplidarNode" output="$(arg output)" ns="back_lidar" required='true'>
        <param name="serial_port"         type="string" value="/dev/ttyRPLidarBack"/>  
        <param name="serial_baudrate"     type="int"    value="256000"/>
        <param name="frame_id"            type="string" value="$(arg back_lidar_frame)"/>
        <param name="inverted"            type="bool"   value="false"/>
        <param name="angle_compensate"    type="bool"   value="true"/>
        <param name="scan_mode"           type="string" value="Stability"/>
    </node>

    <!-- Lidars angle filter -->
    <node pkg="laser_filters" type="scan_to_scan_filter_chain" name="laser_filter" output="$(arg output)" ns="front_lidar">
        <rosparam command="load" file="$(find leo_robot)/config/bringup/laser_front_angle_filter_config.yaml" />
    </node>

    <node pkg="laser_filters" type="scan_to_scan_filter_chain" name="laser_filter" output="$(arg output)" ns="back_lidar">
        <rosparam command="load" file="$(find leo_robot)/config/bringup/laser_back_angle_filter_config.yaml" />
    </node>

    <!-- Two Lidars merger -->
    <node pkg="ira_laser_tools" name="scan_merger" type="laserscan_multi_merger" output="$(arg output)">
        <param name="destination_frame" value="$(arg robot_name)/laser"/>
        <param name="cloud_destination_topic" value="/$(arg robot_name)/merged_cloud"/>
        <param name="scan_destination_topic" value="/$(arg robot_name)/scan"/>
        <param name="laserscan_topics" value ="/$(arg robot_name)/front_lidar/scan_filtered /$(arg robot_name)/back_lidar/scan_filtered" /> 
        <param name="angle_min" value="-3.1415927410125732"/>
        <param name="angle_max" value="3.1415927410125732"/>
        <param name="angle_increment" value="0.00322877"/> 
        <!-- <param name="angle_increment" value="0.0032287694048136473"/> -->
        <param name="scan_time" value="0.0333333"/>
        <param name="range_min" value="0.25"/>
        <param name="range_max" value="25.0"/>
	</node>

</launch>